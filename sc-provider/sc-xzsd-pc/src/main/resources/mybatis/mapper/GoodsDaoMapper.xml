<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">
    <!--统计是否出现重复的书号个数-->
    <select id="countBookNumber" parameterType="java.lang.String" resultType="int">
        select count(book_number)
        from t_sys_goods
        where book_number = #{isbn}
        and is_delete = 0
    </select>

    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        insert into t_sys_goods(
            id,
            goods_name,
            store_id,
            store_name,
            author,
            publisher,
            book_number,
            goods_image,
            old_price,
            selling_price,
            sales,
            stock,
            goods_introduction,
            advertisement,
            category_first,
            category_second,
            goods_status,
            view_num,
            start_time,
            star_level,
            is_delete,
            create_time,
            create_user,
            update_time,
            version
        )
        values(
            #{goodsId},
            #{goodsName},
            #{storeId},
            #{supplierName},
            #{goodsAuthor},
            #{goodsPress},
            #{isbn},
            #{imagePath},
            #{goodsOriginalCost},
            #{goodsPrice},
            0,
            #{goodsInventory},
            #{goodsDescribe},
            #{goodsAdvertise},
            #{oneClassifyId},
            #{twoClassifyId},
            3,
            0,
            now(),
            0,
            0,
            now(),
            #{createUser},
            now(),
            0
        )
    </insert>

    <!--查询商品详情-->
    <select id="getGoodsInfoById" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsVTO">
        select
        t1.id goodsId,
        t1.goods_name goodsName,
        t1.book_number isbn,
        t1.advertisement goodsAdvertise,
        t1.goods_introduction goodsDescribe,
        t2.category_name oneClassifyName,
        t3.category_name twoClassifyName,
        t1.store_name supplierName,
        t1.stock goodsInventory,
        t1.old_price goodsOriginalCost,
        t1.selling_price goodsPrice,
        t1.publisher goodsPress,
        t1.author goodsAuthor,
        t1.goods_image goodsImagePath,
        t1.version version
        from t_sys_goods t1, t_sys_goodscategory t2, t_sys_goodscategory t3
        where t1.id = #{goodsId}
        and t2.id = t1.category_first
        and t3.id = t1.category_second
    </select>

    <!--查询商品一二级分类名称-->
    <select id="getGoodsCategoryName" parameterType="java.lang.String" resultType="java.lang.String">
        select
        t1.category_name
        from t_sys_goodscategory t1, t_sys_goods t2
        where t2.id = #{goodsId}
        and t1.id in (t2.category_first, t2.category_second)
    </select>

    <!--查询商品一二级分类列表-->
    <select id="getListGoodsCategory" parameterType="java.lang.String"
            resultType="com.xzsd.pc.category.entity.GoodsCategoryVO">
        select
        id classifyId,
        category_name classifyName
        from t_sys_goodscategory
        where parent_id = #{classifyId}
        and is_delete = 0
    </select>

    <!--修改商品的信息-->
    <update id="updateGoodsInfo" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_sys_goods
        set
            goods_name = #{goodsName},
            book_number = #{isbn},
            category_first = #{oneClassifyId},
            category_second = #{twoClassifyId},
            advertisement = #{goodsAdvertise},
            goods_introduction = #{goodsDescribe},
            store_name = #{supplierName},
            stock = #{goodsInventory},
            old_price = #{goodsOriginalCost},
            selling_price = #{goodsPrice},
            publisher = #{goodsPress},
            author = #{goodsAuthor},
            goods_image = #{imagePath},
            update_user = #{updateUser},
            update_time = now(),
            version = version + 1
            where id = #{goodsId}
            and version = #{version}
    </update>

    <!--查询商品列表（分页）-->
    <select id="getListGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo"
            resultType="com.xzsd.pc.goods.entity.GoodsVO">
        select
        t1.id goodsId,
        t1.goods_name goodsName,
        t1.old_price goodsOriginalCost,
        t1.selling_price goodsPrice,
        t1.sales goodsSales,
        t2.category_name oneClassifyName,
        t3.category_name twoClassifyName,
        t1.advertisement goodsAdvertise,
        t1.goods_introduction goodsDescribe,
        t1.goods_status goodsStateId,
        t1.start_time goodsShelfTime,
        t1.view_num goodsViewsNum,
        t1.store_name supplierName,
        t1.stock goodsInventory,
        t1.book_number isbn,
        t1.store_id storeId,
        t1.goods_image goodsImagePath,
        t1.version version
        from t_sys_goods t1, t_sys_goodscategory t2, t_sys_goodscategory t3
        where t1.is_delete = 0
        and t2.id = t1.category_first
        and t3.id = t1.category_second
        <if test="goodsName != null and goodsName != null">
            and t1.goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsStateId != null and goodsStateId != ''">
            and t1.goods_status = #{goodsStateId}
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and t1.advertisement like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsPress != null and goodsPress != ''">
            and t1.publisher like concat('%', #{goodsPress}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and t1.author like concat('%', #{goodsAuthor}, '%')
        </if>
        order by t1.create_time desc
    </select>

    <!--修改商品状态-->
    <update id="updateGoodsStatus" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_sys_goods
        set
            goods_status = #{goodsStateId},
            update_time = now(),
            update_user = #{loginId},
            version = version + 1
        where id in
        <foreach item="goodsId" index="index" collection="listGoodsId" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </update>

    <!--删除商品-->
    <update id="deleteGoods" parameterType="java.lang.String">
        update t_sys_goods
        set
            is_delete = 1,
            update_user = #{loginId},
            update_time = now(),
            version = version + 1
        where id in
        <foreach item="goodsId" index="index" collection="listGoodsId" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </update>
</mapper>